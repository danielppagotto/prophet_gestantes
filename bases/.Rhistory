library(tidyverse)
library(rvest)
library(tidytext)
library(dplyr)
library(topicmodels)
library(tm)
library(reshape2)
library(ggplot2)
library(xml2)
library(rio)
install_formats()
#Busca - palavra chave Empreendedor
#recolhendo os links da primeira pagina da folha
url <- "https://search.folha.uol.com.br/search?q=empreendedor&periodo=personalizado&sd=01%2F01%2F2020&ed=30%2F09%2F2021&site=sitefolha"
pagina <- read_html(url)
nodes_link <- xml_find_all(pagina, '//*[@id="view-view"]/div[3]/div/a')
print(nodes_link)
conteudos <- c()
atributos <- c()
for (i in 1:22){
conteudo_i <- xml_text(nodes_link[[i]])
conteudos <- c(conteudos, conteudo_i)
atributo_i <- xml_attr(nodes_link[[i]], attr = "href")
atributos <- c(atributos, atributo_i)
}
#juntando os links
dados <- data.frame(conteudos, atributos)
head(dados)
folha <- c(atributos)
#recolhendo os titulos e os corpos
titulos_sp <- c()
corpos_sp  <- c()
for(i in folha){
fontes_sp <- read_html(i)
titulo_sp <- fontes_sp%>%
html_node(".c-content-head__title")%>% #entre parenteses colocamos codigos html referentes ao titulo
html_text()
titulos_sp <- append(titulos_sp,titulo_sp)
fontes_sp<- read_html(i)
corpo_sp <- fontes_sp%>%
html_node(".c-news__content")%>% #entre parenteses colocamos codigos html referentes ao corpo do texto
html_text()
corpo_unico_sp <- paste(corpo_sp, collapse= " ")
corpos_sp <- append(corpos_sp,corpo_unico_sp)
}
#juntando os links, titulos e corpos
base_folha_sp <- data.frame(titulos_sp,corpos_sp)
#---------------------------------
#recolhendo os links da segunda pagina da folha
url <- "https://search.folha.uol.com.br/search?q=empreendedor&site=sitefolha&sd=01%2F01%2F2020&ed=30%2F09%2F2021&periodo=personalizado&results_count=1343&search_time=0%2C076&url=https%3A%2F%2Fsearch.folha.uol.com.br%2Fsearch%3Fq%3Dempreendedor%26site%3Dsitefolha%26sd%3D01%252F01%252F2020%26ed%3D30%252F09%252F2021%26periodo%3Dpersonalizado&sr=26"
pagina <- read_html(url)
nodes_link <- xml_find_all(pagina, '//*[@id="view-view"]/div[3]/div/a')
print(nodes_link)
conteudos2 <- c()
atributos2 <- c()
for (i in 1:22){
conteudo_i <- xml_text(nodes_link[[i]])
conteudos2 <- c(conteudos2, conteudo_i)
atributo_i <- xml_attr(nodes_link[[i]], attr = "href")
atributos2 <- c(atributos2, atributo_i)
}
#juntando os links
dados2 <- data.frame(conteudos2, atributos2)
head(dados2)
folha2 <- c(atributos2)
for(i in folha2){
fontes_sp <- read_html(i)
titulo_sp <- fontes_sp%>%
html_node(".c-content-head__title")%>% #entre parenteses colocamos codigos html referentes ao titulo
html_text()
titulos_sp <- append(titulos_sp,titulo_sp)
fontes_sp<- read_html(i)
corpo_sp <- fontes_sp%>%
html_node(".c-news__content")%>% #entre parenteses colocamos codigos html referentes ao corpo do texto
html_text()
corpo_unico_sp <- paste(corpo_sp, collapse= " ")
corpos_sp <- append(corpos_sp,corpo_unico_sp)
}
#juntando os links, titulos e corpos
base_folha_sp <- data.frame(titulos_sp,corpos_sp)
#-------------------------------
#recolhendo os links da terceira pagina da folha
url <- "https://search.folha.uol.com.br/search?q=empreendedor&site=sitefolha&sd=01%2F01%2F2020&ed=30%2F09%2F2021&periodo=personalizado&sr=51&results_count=1343&search_time=0%2C066&url=https%3A%2F%2Fsearch.folha.uol.com.br%2Fsearch%3Fq%3Dempreendedor%26site%3Dsitefolha%26sd%3D01%252F01%252F2020%26ed%3D30%252F09%252F2021%26periodo%3Dpersonalizado%26sr%3D26"
pagina <- read_html(url)
nodes_link <- xml_find_all(pagina, '//*[@id="view-view"]/div[3]/div/a')
print(nodes_link)
conteudos3 <- c()
atributos3 <- c()
for (i in 1:23){
conteudo_i <- xml_text(nodes_link[[i]])
conteudos3 <- c(conteudos3, conteudo_i)
atributo_i <- xml_attr(nodes_link[[i]], attr = "href")
atributos3 <- c(atributos3, atributo_i)
}
#juntando os links
dados3 <- data.frame(conteudos3, atributos3)
head(dados3)
folha3 <- c(atributos3)
View(dados)
#juntando os links, titulos e corpos
base_folha_sp <- data.frame(titulos_sp,corpos_sp)
#-------------------------------
#recolhendo os links da quarta pagina da folha
url <- "https://search.folha.uol.com.br/search?q=empreendedor&site=sitefolha&sd=01%2F01%2F2020&ed=30%2F09%2F2021&periodo=personalizado&sr=76&results_count=1343&search_time=0%2C684&url=https%3A%2F%2Fsearch.folha.uol.com.br%2Fsearch%3Fq%3Dempreendedor%26site%3Dsitefolha%26sd%3D01%252F01%252F2020%26ed%3D30%252F09%252F2021%26periodo%3Dpersonalizado%26sr%3D51"
pagina <- read_html(url)
nodes_link <- xml_find_all(pagina, '//*[@id="view-view"]/div[3]/div/a')
print(nodes_link)
conteudos4 <- c()
atributos4 <- c()
for (i in 1:22){
conteudo_i <- xml_text(nodes_link[[i]])
conteudos4 <- c(conteudos4, conteudo_i)
atributo_i <- xml_attr(nodes_link[[i]], attr = "href")
atributos4 <- c(atributos4, atributo_i)
}
#juntando os links
dados4 <- data.frame(conteudos4, atributos4)
head(dados4)
folha4 <- c(atributos4)
for(i in folha4){
fontes_sp <- read_html(i)
titulo_sp <- fontes_sp%>%
html_node(".c-content-head__title")%>% #entre parenteses colocamos codigos html referentes ao titulo
html_text()
titulos_sp <- append(titulos_sp,titulo_sp)
fontes_sp<- read_html(i)
corpo_sp <- fontes_sp%>%
html_node(".c-news__content")%>% #entre parenteses colocamos codigos html referentes ao corpo do texto
html_text()
corpo_unico_sp <- paste(corpo_sp, collapse= " ")
corpos_sp <- append(corpos_sp,corpo_unico_sp)
}
#juntando os links, titulos e corpos
base_folha_sp <- data.frame(titulos_sp,corpos_sp)
#-------------------------------
#recolhendo os links da quinta pagina da folha
url <- "https://search.folha.uol.com.br/search?q=empreendedor&site=sitefolha&sd=01%2F01%2F2020&ed=30%2F09%2F2021&periodo=personalizado&sr=101&results_count=1343&search_time=0%2C527&url=https%3A%2F%2Fsearch.folha.uol.com.br%2Fsearch%3Fq%3Dempreendedor%26site%3Dsitefolha%26sd%3D01%252F01%252F2020%26ed%3D30%252F09%252F2021%26periodo%3Dpersonalizado%26sr%3D76"
pagina <- read_html(url)
nodes_link <- xml_find_all(pagina, '//*[@id="view-view"]/div[3]/div/a')
print(nodes_link)
conteudos5 <- c()
atributos5 <- c()
for (i in 1:23){
conteudo_i <- xml_text(nodes_link[[i]])
conteudos5 <- c(conteudos5, conteudo_i)
atributo_i <- xml_attr(nodes_link[[i]], attr = "href")
atributos5 <- c(atributos5, atributo_i)
}
#juntando os links
dados5 <- data.frame(conteudos5, atributos5)
head(dados5)
folha5 <- c(atributos5)
for(i in folha5){
fontes_sp <- read_html(i)
titulo_sp <- fontes_sp%>%
html_node(".c-content-head__title")%>% #entre parenteses colocamos codigos html referentes ao titulo
html_text()
titulos_sp <- append(titulos_sp,titulo_sp)
fontes_sp<- read_html(i)
corpo_sp <- fontes_sp%>%
html_node(".c-news__content")%>% #entre parenteses colocamos codigos html referentes ao corpo do texto
html_text()
corpo_unico_sp <- paste(corpo_sp, collapse= " ")
corpos_sp <- append(corpos_sp,corpo_unico_sp)
}
#juntando os links, titulos e corpos
base_folha_sp <- data.frame(titulos_sp,corpos_sp)
#-------------------------------
#recolhendo os links da sexta pagina da folha
url <- "https://search.folha.uol.com.br/search?q=empreendedor&site=sitefolha&sd=01%2F01%2F2020&ed=30%2F09%2F2021&periodo=personalizado&sr=126&results_count=1343&search_time=0%2C116&url=https%3A%2F%2Fsearch.folha.uol.com.br%2Fsearch%3Fq%3Dempreendedor%26site%3Dsitefolha%26sd%3D01%252F01%252F2020%26ed%3D30%252F09%252F2021%26periodo%3Dpersonalizado%26sr%3D101"
pagina <- read_html(url)
nodes_link <- xml_find_all(pagina, '//*[@id="view-view"]/div[3]/div/a')
print(nodes_link)
conteudos6 <- c()
atributos6 <- c()
for (i in 1:23){
conteudo_i <- xml_text(nodes_link[[i]])
conteudos6 <- c(conteudos6, conteudo_i)
atributo_i <- xml_attr(nodes_link[[i]], attr = "href")
atributos6 <- c(atributos6, atributo_i)
}
#juntando os links
dados6 <- data.frame(conteudos6, atributos6)
head(dados6)
folha6 <- c(atributos6)
for(i in folha6){
fontes_sp <- read_html(i)
titulo_sp <- fontes_sp%>%
html_node(".c-content-head__title")%>% #entre parenteses colocamos codigos html referentes ao titulo
html_text()
titulos_sp <- append(titulos_sp,titulo_sp)
fontes_sp<- read_html(i)
corpo_sp <- fontes_sp%>%
html_node(".c-news__content")%>% #entre parenteses colocamos codigos html referentes ao corpo do texto
html_text()
corpo_unico_sp <- paste(corpo_sp, collapse= " ")
corpos_sp <- append(corpos_sp,corpo_unico_sp)
}
library(srvyr); library(tidyverse); library(vroom); library(readxl); library(patchwork);
library(ggrepel); library(PNSIBGE); library(rio)
setwd("C:/Users/LUAN/Desktop/UFG/LAPEI/PNS e PNADc/GRUPO DOS EMPREENDEDORES - Indicadores para a saúde do empreendedor")
variaveis_selecionadas <- c("Q00201", "Q03001", "P00404", "P00104", "N00101", "N001","J012", "J01101", "J01002", "J007", "J00101", "J001",
"J00404", "I00102", "J002", "B001", "B003", "C006","C008","C009", "E01602","E01501", "E01601",
"E017", "V0001", "V0015", "V0031", "B001", "C001", "C00301", "C004", "C006", "C008", "C009", "D00901",
"E001", "E002", "E003", "E004", "E005", "E006011", "E008", "E01201", "E01401", "E014011",
"E01402", "E01403", "E01501", "E01601", "E01602", "E017", "E01801", "E01802", "E01805",
"E019", "E022", "E023011", "E024011", "I00102", "I005", "I006", "I00401", "I00402", "I00403",
"I00404", "J001", "J00101", "J00402", "J00404", "J007", "J00801", "J009", "J01002", "J01101",
"J012", "J037", "J038", "J041", "J05301", "J057", "J01301", "N010", "N011", "N012", "N013", "N014", "N015", "N016",
"N017", "N018", "Q092", "Q09201", "Q09301", "Q094", "Q09502", "Q09605", "Q09606", "Q10101",
"Q10202", "Q105", "Q10701", "Q109", "Q11006", "Q11007", "Q11008", "Q11009", "Q11010", "Q111",
"Q11201", "Q11406", "Q11408", "Q115", "P02801", "P03001", "P035", "P050", "P067", "P052", "P05401",
"Q060", "Q06306", "Q068", "Q074", "Q079", "Q088", "Q11604", "Q120", "Q124", "VDD004A", "H004")
dadospns <- get_pns(year=2019, labels=TRUE, deflator=TRUE, design=TRUE, vars=variaveis_selecionadas)
dados <- as_survey_design(dadospns)
## 1 - Hipertensão (Q00201)
#A nível nacional
hipert <- dados%>%
filter(E01401 == "Empregador" | E01401 == "Conta própria") %>%
filter(E01401 != "NA" & Q00201 != "NA") %>%
group_by(Q00201) %>%
summarise(proportion = survey_mean(),
total = survey_total()) %>%
filter(Q00201 != "NA") %>%
mutate(categoria = "Empreendedor")
library(tidyverse); library(lubridate); library(modeltime); library(tidymodels)
library(timetk)
setwd("~/GitHub/prophet_gestantes/bases")
municipio_regiao <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/municipio_regiao.csv",
col_types = cols(CO_MUNICIP = col_character(),
CO_REGSAUD = col_character())) %>%
janitor::clean_names()
nascimentos <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/nascimentos.csv") %>%
select(-X1) %>% janitor::clean_names()
nascimentos$dtnasc <- dmy(nascimentos$dtnasc)
regioes_nomes <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/regioes_nomes.csv",
col_types = cols(CO_REGSAUD = col_character())) %>%
janitor::clean_names() %>%
select(co_regsaud, ds_nomepad)
# nascimentos$mes_ano <- zoo::as.yearmon(nascimentos$dtnasc, "%Y %m")
nascimentos$mes_ano <- as.Date(format(nascimentos$dtnasc, "%Y-%m"))
nascimentos <- nascimentos %>%
mutate(regiao = as.character(str_sub(codmunres, end = 6)))
nascimentos_go <- nascimentos %>%
filter(dtnasc < "2021-10-01") %>%
left_join(municipio_regiao, by = c("regiao"="co_municip")) %>%
left_join(regioes_nomes, by = c("co_regsaud" = "co_regsaud")) %>%
group_by(co_regsaud, dtnasc, ds_nomepad) %>%
summarise(total = sum(contagem)) %>%
filter(ds_nomepad != "NA")
datas <- nascimentos_go %>%
ungroup() %>%
select(dtnasc) %>%
distinct(dtnasc)
library(tidyverse); library(lubridate); library(modeltime); library(tidymodels)
library(timetk)
setwd("~/GitHub/prophet_gestantes/bases")
municipio_regiao <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/municipio_regiao.csv",
col_types = cols(CO_MUNICIP = col_character(),
CO_REGSAUD = col_character())) %>%
janitor::clean_names()
nascimentos <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/nascimentos.csv") %>%
select(-X1) %>% janitor::clean_names()
nascimentos$dtnasc <- dmy(nascimentos$dtnasc)
regioes_nomes <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/regioes_nomes.csv",
col_types = cols(CO_REGSAUD = col_character())) %>%
janitor::clean_names() %>%
select(co_regsaud, ds_nomepad)
# nascimentos$mes_ano <- zoo::as.yearmon(nascimentos$dtnasc, "%Y %m")
# nascimentos$mes_ano <- as.Date(format(nascimentos$dtnasc, "%Y-%m"))
nascimentos <- nascimentos %>%
mutate(regiao = as.character(str_sub(codmunres, end = 6)))
nascimentos_go <- nascimentos %>%
filter(dtnasc < "2021-10-01") %>%
left_join(municipio_regiao, by = c("regiao"="co_municip")) %>%
left_join(regioes_nomes, by = c("co_regsaud" = "co_regsaud")) %>%
group_by(co_regsaud, dtnasc, ds_nomepad) %>%
summarise(total = sum(contagem)) %>%
filter(ds_nomepad != "NA")
datas <- nascimentos_go %>%
ungroup() %>%
select(dtnasc) %>%
distinct(dtnasc)
nascimentos <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/nascimentos.csv") %>%
select(-X1) %>% janitor::clean_names()
library(tidyverse); library(lubridate); library(modeltime); library(tidymodels)
library(timetk)
setwd("~/GitHub/prophet_gestantes/bases")
municipio_regiao <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/municipio_regiao.csv",
col_types = cols(CO_MUNICIP = col_character(),
CO_REGSAUD = col_character())) %>%
janitor::clean_names()
library(tidyverse); library(lubridate); library(modeltime); library(tidymodels)
library(timetk)
setwd("~/GitHub/prophet_gestantes/bases")
municipio_regiao <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/municipio_regiao.csv",
col_types = cols(CO_MUNICIP = col_character(),
CO_REGSAUD = col_character())) %>%
janitor::clean_names()
nascimentos <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/nascimentos.csv") %>%
select(-X1) %>% janitor::clean_names()
nascimentos$dtnasc <- dmy(nascimentos$dtnasc)
regioes_nomes <- read_csv("https://raw.githubusercontent.com/danielppagotto/prophet_gestantes/main/bases/regioes_nomes.csv",
col_types = cols(CO_REGSAUD = col_character())) %>%
janitor::clean_names() %>%
select(co_regsaud, ds_nomepad)
# nascimentos$mes_ano <- zoo::as.yearmon(nascimentos$dtnasc, "%Y %m")
# nascimentos$mes_ano <- as.Date(format(nascimentos$dtnasc, "%Y-%m"))
nascimentos <- nascimentos %>%
mutate(regiao = as.character(str_sub(codmunres, end = 6)))
nascimentos_go <- nascimentos %>%
filter(dtnasc < "2021-10-01") %>%
left_join(municipio_regiao, by = c("regiao"="co_municip")) %>%
left_join(regioes_nomes, by = c("co_regsaud" = "co_regsaud")) %>%
group_by(co_regsaud, dtnasc, ds_nomepad) %>%
summarise(total = sum(contagem)) %>%
filter(ds_nomepad != "NA")
datas <- nascimentos_go %>%
ungroup() %>%
select(dtnasc) %>%
distinct(dtnasc)
nascimentos_go_centro_oeste <- nascimentos_go %>%
filter(macrorregiao == "macrorregião Centro-Oeste") %>%
ungroup() %>%
select(-macrorregiao, -regiao)
datas <- nascimentos_go %>%
ungroup() %>%
select(dtnasc) %>%
distinct(dtnasc)
nascimentos_go_centro_oeste <- nascimentos_go %>%
filter(macrorregiao == "macrorregião Centro-Oeste") %>%
ungroup() %>%
select(-macrorregiao, -regiao)
nascimentos_go_centro_oeste <- nascimentos_go %>%
filter(macrorregiao == "macrorregião Centro-Oeste")
View(nascimentos_go)
municipios_macrorregiao_saude <- read_csv("municipios_macrorregiao_saude.csv")
nascimentos_go <- nascimentos %>%
filter(dtnasc < "2021-10-01") %>%
left_join(municipios_macrorregiao_saude, by = c("regiao"="cod_municipio"))
nascimentos <- nascimentos %>%
mutate(regiao = as.integer(str_sub(codmunres, end = 6)))
nascimentos_go <- nascimentos %>%
filter(dtnasc < "2021-10-01") %>%
left_join(municipios_macrorregiao_saude, by = c("re
nascimentos_go <- nascimentos %>%
filter(dtnasc < "2021-10-01") %>%
left_join(municipios_macrorregiao_saude, by = c("regiao"="cod_municipio"))
nascimentos_go <- nascimentos %>%
filter(dtnasc < "2021-10-01") %>%
left_join(municipios_macrorregiao_saude, by = c("regiao"="cod_municipio")) %>%
group_by(regiao, macrorregiao, dtnasc) %>%
summarise(total = sum(contagem)) %>%
filter(macrorregiao != "NA")
datas <- nascimentos_go %>%
ungroup() %>%
select(dtnasc) %>%
distinct(dtnasc)
nascimentos_go_centro_oeste <- nascimentos_go %>%
filter(macrorregiao == "macrorregião Centro-Oeste") %>%
ungroup() %>%
select(-macrorregiao, -regiao)
